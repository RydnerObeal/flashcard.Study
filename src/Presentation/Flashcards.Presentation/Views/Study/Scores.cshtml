@model IEnumerable<Flashcards.Infrastructure.Entities.StudyResult>
@{
    var deck = (Flashcards.Infrastructure.Entities.Deck)ViewBag.Deck;
    ViewData["Title"] = $"Scores - {deck.Name}";
}
<div class="container mt-4">
  <div class="d-flex justify-content-between align-items-center mb-3">
    <h3 class="mb-0">Scores: @deck.Name</h3>
    <div>
      <a class="btn btn-outline-primary" asp-action="Review" asp-route-deckId="@deck.Id">Start Review</a>
      <a class="btn btn-primary" asp-action="Quiz" asp-route-deckId="@deck.Id">Start Quiz</a>
      <a class="btn btn-outline-secondary" asp-controller="Decks" asp-action="Index">Back to Decks</a>
    </div>
  </div>

  <div class="card shadow-sm">
    <div class="card-body">
      <table class="table table-hover align-middle mb-0">
        <thead>
          <tr>
            <th>Date</th>
            <th>Mode</th>
            <th>Score</th>
          </tr>
        </thead>
        <tbody>
        @if (!Model.Any())
        {
          <tr>
            <td colspan="3" class="text-center text-muted">No scores yet. Start a study session to record your first score!</td>
          </tr>
        }
        @foreach (var r in Model)
        {
          if (string.IsNullOrEmpty(r.UserId)) continue;
          var pct = r.Total > 0 ? (int)Math.Round(100.0 * r.Correct / r.Total) : 0;
          <tr>
            <td>@r.PlayedAt.ToLocalTime().ToString("g")</td>
            <td>@r.Mode</td>
            <td>
              <span class="badge @(pct>=70?"text-bg-success":"text-bg-warning")">@r.Correct/@r.Total (@pct%)</span>
            </td>
          </tr>
        }
        </tbody>
      </table>
    </div>
  </div>
</div>
